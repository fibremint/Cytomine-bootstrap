upstream backend-ims {
    server $IMS_ALIAS:$IMS_PORT;
}

server {
    listen 80;
    listen 443 ssl http2;
    server_name $IMS_URL;

    ssl_certificate /certificates/$IMS_URL.pem;
    ssl_certificate_key /certificates/$IMS_URL-key.pem;

    location / {
        include /usr/local/nginx/conf/web-ui-dev-cors.conf;
        add_header Access-Control-Allow-Origin '*' always;

        proxy_pass http://backend-ims;
    }

    location /slice/tile {
        add_header Access-Control-Allow-Origin *;
        add_header X-Cache-Status $upstream_cache_status;
        proxy_pass http://backend-ims;
    }
}

server {
    listen 80;
    listen 443 ssl http2;
    server_name  $UPLOAD_URL;

    ssl_certificate /certificates/$UPLOAD_URL.pem;
    ssl_certificate_key /certificates/$UPLOAD_URL-key.pem;

    location /upload {
        # No limit on uploaded file size.
        client_max_body_size 0;

        proxy_read_timeout 600;

        # Pass altered request body to this location
        upload_pass   @ims;
        upload_store /tmp/uploaded;
        upload_store_access user:rw group:rw all:rw;

        # Set specified fields in request body
        upload_set_form_field $upload_field_name.name "$upload_file_name";
        upload_set_form_field $upload_field_name.content_type "$upload_content_type";
        upload_set_form_field $upload_field_name.path "$upload_tmp_path";

        # Inform backend about hash and size of a file
        upload_aggregate_form_field "$upload_field_name.md5" "$upload_file_md5";
        upload_aggregate_form_field "$upload_field_name.size" "$upload_file_size";
        upload_pass_form_field "^submit$|^description$";

        upload_pass_args on;

        add_header Access-Control-Allow-Credentials 'false';
        add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
        add_header Access-Control-Allow-Headers 'Content-Type, Content-Range, Content-Disposition, Content-Description, date, dateFull, authorization,content-type-full';
        add_header Access-Control-Max-Age '1728000';
        add_header Access-Control-Allow-Origin *;
        include /usr/local/nginx/conf/web-ui-dev-cors.conf;
    }

    # Pass altered request body to a backend
    location @ims {
        proxy_pass   http://backend-ims;
        proxy_read_timeout 600;

        add_header Access-Control-Allow-Origin '*' always;
        include /usr/local/nginx/conf/web-ui-dev-cors.conf;
    }

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   html;
    }
}
